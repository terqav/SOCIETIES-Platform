<!-- - OPEN SOURCE LICENCE TEXT - Copyright (C) 2011, SOCIETIES consortium -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.societies</groupId>
	<artifactId>spring-osgi-parent</artifactId>
	<packaging>pom</packaging>
	<version>RELEASE</version>
	<!-- All platform projects should inherit from version-parent - so that 
		a common versioning can be applied -->
	<parent>
		<groupId>org.societies</groupId>
		<artifactId>version-parent</artifactId>
		<version>RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <spring.osgi.deploy.dir>${env.VIRGO_HOME}${file.separator}pickup</spring.osgi.deploy.dir> -->
		<!-- Specific properties for the Virgo environment -->
		<!-- The location of the virgo runtime should be configured in a *maven 
			profile* - and not in here (to prevent an accidential check in) - - The following 
			variables are assumed to be declared: - virgo.home - Where the virgo/equinox 
			is deployed - virgo.deploy - Deployment folder to deploy artifacts to - -->
		<!-- Spring dependency version -->
		<spring.version>3.0.5.RELEASE</spring.version>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>
	<!-- - This section controls the versions of toolkits and frameworks used -->
	<dependencyManagement>
		<dependencies>
			<!-- Societies API Project libraries -->
			<dependency>
				<groupId>org.societies.api.external</groupId>
				<artifactId>societies-api</artifactId>
				<version>${release.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.societies.api.internal</groupId>
				<artifactId>societies-api-internal</artifactId>
				<version>${release.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Common external libraries -->
			<dependency>
				<groupId>org.societies</groupId>
				<artifactId>common-ext-libs</artifactId>
				<version>${release.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Common external database libraries -->
			<dependency>
				<groupId>org.societies</groupId>
				<artifactId>hibernate_classes</artifactId>
				<version>${release.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- XMPP dependencies -->
			<dependency>
				<groupId>org.igniterealtime</groupId>
				<artifactId>tinder</artifactId>
				<version>1.2.2</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.igniterealtime</groupId>
				<artifactId>whack</artifactId>
				<version>1.0.1</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.12</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack</artifactId>
				<version>3.2.1</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smackx</artifactId>
				<version>3.2.1</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smackx-debug</artifactId>
				<version>3.2.1</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.simpleframework</groupId>
				<artifactId>simple-xml</artifactId>
				<version>2.6.9</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<!-- spring library -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.spring-library</artifactId>
				<type>libd</type>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Spring framework bundles -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.core</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.apache.commons</groupId>
						<artifactId>com.springsource.org.apache.commons.logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.aop</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.asm</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.beans</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.apache.commons</groupId>
						<artifactId>com.springsource.org.apache.commons.logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.context</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.apache.commons</groupId>
						<artifactId>com.springsource.org.apache.commons.logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.expression</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.jdbc</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.orm</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.transaction</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.api</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.log4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.log4j</groupId>
						<artifactId>com.springsource.org.apache.log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.2</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Configure the build environment -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-property</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>spring.osgi.deploy.dir</property>
									<message>You must specify the location of the Virgo
										installation with the property VIRGO_HOME.
										Hints: use your
										profile ~/.m3/settings.xml or set via the command
										line
										-Dvirgo.home=location.</message>
								</requireProperty>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.3</version>
					<executions>
						<execution>
							<id>cobertura</id>
							<phase>test</phase>
							<inherited>true</inherited>
							<goals>
								<goal>cobertura</goal>
							</goals>
							<configuration>
								<instrumentation>
									<ignores>
										<ignore>org.societies.*.*Exception</ignore>
									</ignores>
									<excludes>
										<!--Insert any classes that should not be tested for coverage -->
										<!--Note: Exclusions here are case sensitive -->
										<exclude>org/societies/**/*Exception.class </exclude>
									</excludes>
								</instrumentation>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</execution>
						<execution>
							<id>cobertura-clean</id>
							<phase>clean</phase>
							<inherited>true</inherited>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.5</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<!-- Used to copy the generated artifact to the container defined by 
							VIRGO_HOME -->
						<execution>
							<id>copy</id>
							<phase>install</phase>
							<goals>
								<goal>copy</goal>
							</goals>
							<configuration>
								<stripVersion>false</stripVersion>
							</configuration>
						</execution>
						<!-- Used to analyze the dependencies of the project. Will print warnings 
							during verify phase,directly before install phase -->
						<execution>
							<id>analyze</id>
							<phase>verify</phase>
							<goals>
								<goal>analyze-only</goal>
							</goals>
							<configuration>
								<failOnWarning>false</failOnWarning>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- Defines from where toolkits and libraries are fetched -->
	<repositories>
		<!-- Societies repository -->
		<repository>
			<id>societies</id>
			<name>Societies Maven Repository</name>
			<url>http://maven.ict-societies.eu/nexus/content/repositories/thirdparty/
      </url>
		</repository>

		<!-- Spring source repositories -->
		<repository>
			<id>i21-s3-osgi-repo</id>
			<name>i21 osgi artifacts repo</name>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://maven.springframework.org/osgi</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.milestone</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Milestone Releases</name>
			<url>http://repository.springsource.com/maven/bundles/milestone</url>
		</repository>
		<repository>
			<id>spring-release</id>
			<name>Spring Portfolio Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>spring-ext</id>
			<name>Spring External Dependencies Repository</name>
			<url>
        https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/
      </url>
		</repository>

		<!-- spring library -->
		<repository>
			<id>com.springsource.repository.libraries.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.external</id>
			<name>SpringSource 
		Enterprise Bundle Repository - External Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/external</url>
		</repository>

		<!-- General Eclipse repository -->
		<repository>
			<id>eclipse-repository</id>
			<name>Eclipse Repository</name>
			<url>http://repo1.maven.org/eclipse/</url>
		</repository>

		<repository>
			<id>maven-repository.dev.java.net</id>
			<name>Java Dev Net Repository</name>
			<url>http://download.java.net/maven/2/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- General repository -->
		<repository>
			<id>mvnrepository.com</id>
			<name>mvnrepository.com</name>
			<url>http://mvnrepository.com/artifact/</url>
		</repository>
	</repositories>


	<!-- Defines from where we get our plugin tools ie. tools used during the 
		build -->
	<pluginRepositories>
		<pluginRepository>
			<id>maven-repo</id>
			<name>maven repo</name>
			<url>http://repo1.maven.org/maven2/</url>
		</pluginRepository>

		<!-- Spring tools -->
		<pluginRepository>
			<id>com.springsource.repository.bundles.milestone</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Milestone Releases</name>
			<url>http://repository.springsource.com/maven/bundles/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project> 
